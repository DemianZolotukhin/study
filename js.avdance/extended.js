//This is my first code!
console.log('Hello World');

let name = 'Mosh'; // String Literal
console.log(name);

// Cannot be a reserved keyword
// Should be meaninful
// Cannot start with number (1name)
// Cannot contain a space or hyphen (-)
// Are case-sensitive

let firstName = 'Mash';
let lastName = 'Hamedani';

const interestRate = 0.3;
console.log(interestRate);

let age = 30; // Number Literal
let isApproveed = true; //Bolean Literal
let secondName;
let selectedColor = null;

let person = {
    namas: 'Morti',
    years: 25
};


// Dot Notation
person.name = 'John';

// Bracket Notation
person['name'] = 'Marry';

console.log(person.name);

for (let i = 7; i >= 4; i--) {

}

const num = 4;
console.log(num + 5);

//–ö–æ–ª–∏ –≤ –Ω–∞—Å —î —É–º–æ–≤–∞ —ñ –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–Ω—è, –º–∏ –º–æ–∂–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ç–µ—Ä–Ω–∞—Ä–Ω—ñ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏ : ?, 
//–∞–±–æ —è–∫—â–æ —è –Ω–µ –≤–∏–±–∏—Ä–∞—é –∑–Ω–∞—á–µ–Ω–Ω—è, –∞ –≤–∏–∫–æ–Ω—É—é –∫–æ–º–∞–Ω–¥–∏, –∞–±–æ —è–∫—â–æ –∑–Ω–∞—á–µ–Ω—å –±—ñ–ª—å—à–µ –Ω—ñ–∂ –æ–¥–Ω–µ, —è –±—É–¥—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ if, else.(–ê–±–æ switch case)


 'use strict';
 
 let age6 = 0;

 age6++; // 0
 ++age6; // 2

 console.log(age);


 function increase(x) {
    x++;
    return x;
 }

 const y = increase(2);

 console.log(y);



// –ø—ñ–¥–Ω–µ—Å–µ–Ω–Ω—è –≤ —Å—Ç–µ–ø—ñ–Ω—å –º–∞—î –±—ñ–ª—å—à–∏–π –ø—Ä—ñ–æ—Ä—ñ—Ç–µ—Ç –Ω—ñ–∂ –¥—ñ–ª–µ–Ω–Ω—è –∑ –æ—Å—Ç–∞—á–µ—é

'use strict';

const x = 10 % 2 ** 3;
console.log(x);


// –ö–æ–ª–∏ –º–∏ —Å–∫—ñ–Ω—á–µ–Ω–Ω–µ –¥—ñ–ª–∏–º–æ –Ω–∞ –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–µ, —Ç–æ –æ—Ç—Ä–∏–º—É—î–º–æ infinity, –∞ —è–∫—â–æ –ø–æ–º–Ω–æ–∂–∏—Ç–∏ –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω—ñ—Å—Ç—å –Ω–∞ –Ω—É–ª—å –º–∏ –æ—Ç—Ä–∏–º–∞—î–º–æ NaN



// —Ä–æ–±–æ—Ç–∞ –∑ —á–∏—Å–ª–∞–º–∏
'use strict';

const value = '   123.4f \n \t ';
console.log(
  // Number(value),
  +value,
  parseInt(value),//–ø—Ä–æ—á–∏—Ç–∞—Ç–∏ —á–∏—Å–ª–æ –∑ —á–∞—Å—Ç–∏–Ω–∏ —Ä—è–¥–∫–∞(—Ü—ñ–ª–µ —á–∏—Å–ª–æ, —è–∫–µ –º–æ–∂–Ω–∞ –±—É–ª–æ –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ –≤—ñ–¥–∫–∏–Ω—É–≤—à–∏ –ø—Ä–æ–±—ñ–ª–∏ –¥–æ –ø–µ—Ä—à–æ–≥–æ —Ä—è–¥–∫–∞)
  parseFloat(value)//—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–±–µ—Ä–µ–≥—Ç–∏ –¥—Ä–æ–±–æ–≤—É —á–∞—Å—Ç–∫—É
);

'use strict'

let xz = 12.345;

console.log(xz);

console.log(`Math.floor(${xz}) = `, Math.floor(xz), 'closest <= xz');
console.log(`Math.ceil(${xz}) = `, Math.ceil(xz), 'closest >= xz');
console.log(`Math.trunc(${xz}) = `, Math.trunc(xz), 'without decimal part');
console.log(`Math.round(${xz}) = `, Math.round(xz * 100) / 100, 'down < 0.5, up >= 0.5'); // –≤–∏—Ä–∞–∑ (xz * 100) / 100 –¥–æ–∑–≤–æ–ª—è—î –Ω–∞–º –¥–æ–¥–∞—Ç–∏ –∑–Ω–∞–∫–∏ –ø—ñ—Å–ª—è –∫—Ä–∞–ø–∫–∏ 

console.log(`xz.toFixed(0) = `, xz.toFixed(0)); // –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —á–∏—Å–ª–∞ –Ω–∞ —Ä—è–¥–æ–∫(—Å—Ö–æ–∂–µ –Ω–∞ —Ä–∞—É–Ω–¥, –∞–ª–µ –º–∏ –º–æ–∂–µ–º–æ –ø—Ä–æ–ø–∏—Å–∞—Ç–∏ –∫-—Å—Ç—å –∑–Ω–∞–∫—ñ–≤ –ø—ñ—Å–ª—è –∫–æ–º–∏)
//—â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —á–∏—Å–ª–æ –∑ –æ–¥–Ω–∏–º –∑–Ω–∞—á–µ–Ω–Ω—è–º –ø—ñ—Å–ª—è –∫—Ä–∞–ø–∫–∏, –º–æ–∂–Ω–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ —Å—Ç—Ä—ñ–Ω–≥ –≤ –Ω–∞–º –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é +


const resultArray = getSum([2, 5, 13, 4, 5, 1, 6, 12, 9, 8]);

console.log(resultArray);

function getSum(numbers) {
  if (numbers.length === 0) {
    return 0;
  }

  let sum = 0;
  let min = numbers[0];

  for (const n of numbers) {
    if(min > n) {
      min = n;
    }
    sum += n;
  }

  return Math.trunc(sum / numbers.length)
}

'use strict';

let res13 = 373 % 2;
console.log(res13)


'use strict';

for (let i = 0; i < 10; i++) {
  if (i % 2 === 0) {
    continue;
  }

  console.log(i);
}


'use strict' 

let i = 0;
for (;;) {
  if (i > 3) {
    break;
  }
  
  console.log(i)

  i++;
}
  
console.log(i) 
//–í —Ü—å–æ–º—É –≤–∏–ø–∞–¥–∫—É —ñ –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–µ –ø–æ–∑–∞ —Ü–∏–∫–ª–æ–º
//–ü—ñ—Å–ª—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –∫–æ–Ω—Å–æ–ª—å –ª–æ–≥—É —ñ —â–µ —Ä–∞–∑ –∑–±—ñ–ª—å—à–∏–ª–∞—Å—è


'use strict'
const SECONDS_IN_DAY = 24 * 60 * 60;

for (let daysAgo = 0; daysAgo < 1e1; daysAgo++) {
  const secondsAgo = daysAgo * SECONDS_IN_DAY;

  console.log(secondsAgo);
}

//–ü–æ—Ç—Ä—ñ–±–Ω–æ —É–Ω–∏–∫–∞—Ç–∏ –ª–∏—à–Ω—ñ—Ö –æ–±—á–∏—Å–ª–µ–Ω—å –≤ —Å–µ—Ä–µ–¥–∏–Ω—ñ —Ü–∏–∫–ª—É

'use strict';

let n = 256.4;

let count = 0;
while (true) {
  n /= 2;

  if (!Number.isInteger(n)) {
    break;
  }

  count++
}
 
console.log(count);

// –ö–æ–ª–∏ –≤ –Ω–∞—Å —î —Ç—ñ–ª—å–∫–∏ —É–º–æ–≤–∞ —ñ –º–∏ –Ω–µ –∑–Ω–∞—î–º–æ –∫-—Å—Ç—å —ñ—Ç–µ—Ä–∞—Ü—ñ–π, –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ü–∏–∫–ª while

// IF –≤–∏–∫–æ–Ω—É—î —É–º–æ–≤—É –æ–¥–∏–Ω —Ä–∞–∑, –∞ while –¥–æ–ø–æ–∫–∏ —É–º–æ–≤–∞ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –≤—ñ—Ä–Ω–æ—é

do {
  n /= 2;
  count++;
} while (Number.isInteger(n))

//–í –≤–∏–ø–∞–¥–∫—É –∑ do while –ø–µ—Ä—à–∞ —ñ—Ç–µ—Ä–∞—Ü—ñ—è –≤—ñ–¥–±—É–¥–µ—Ç—å—Å—è –≤ –±—É–¥—å-—è–∫–æ–º—É –≤–∏–ø–∞–¥–∫—É

const n1 = 4;
let sum = 0;

for (i = 0; i <= n1; i++) {
  sum += i;
}

console.log(sum)


const title = 'Mate academy';
console.log(title[title.length - 4]);
console.log(title.at(-2))
//–î–≤–∞ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –∑–∞–ø–∏—Å—É, —Ç–æ —â–æ –∑–Ω–∏–∑—É –∫–æ—Ä–æ—Ç—à–∏–π

console.log(title.charAt(-2));
//–Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫ –∑–∞–º—ñ—Å—Ç—å undefined(—è–∫—â–æ —ñ–Ω–¥–µ–∫—Å –±—ñ–ª—å—à–∏–π –Ω—ñ–∂ —Å–∏–º–≤–æ–ª—ñ–≤ –≤ —Ä—è–¥–∫—É)

'use strict';

const message = '\\ \'He\tllo \nworld! üîî\xA9 \u23F3 \u{1F514}';
// \n - –ø–µ—Ä–µ–Ω–æ—Å —Ä—è–¥–∫–∞
// \t - –¥–æ–≤–≥–∏–π –ø—Ä–æ–±—ñ–ª

console.log(message);
//–©–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –∫–æ–¥ —Å–∏–º–≤–æ–ª–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ console.log(message.codePointAt(1));
//–ú–∏ –º–æ–∂–µ–º–æ –≤—Å—Ç–∞–≤–ª—è—Ç–∏ —Å–∏–º–≤–æ–ª–∏ –≤ –∫–æ–¥ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —ó—Ö 16-—Ç–∫–æ–≤–æ–≥–æ –∫–æ–¥—É

let str = '';

for(let i = 1; i < 256; i++) {
  str += String.fromCodePoint(i);
}

console.log(str);

'use strict';

const name12 = 'Hedgehog';
const name22 = 'apple';

console.log(
  name12.toLowerCase() > name22.toLowerCase()
);

const word1 = '—ó–∂–∞—á–æ–∫';
const word2 = '—è–±–ª—É–∫–æ';

console.log(
  word1.localeCompare(word2)
);

// localCompare –º–µ—Ç–æ–¥, —è–∫–∏–π –ø–æ—Ä—ñ–≤–Ω—é—î –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –≤—Å—ñ—Ö –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç–µ–π –º–æ–≤–∏
// 1 —è–∫—â–æ –ø–µ—Ä—à–µ —Å–ª–æ–≤–æ –≤ —Å–ª–æ–≤–Ω–∏–∫—É —Å—Ç–æ—ó—Ç—å –ø—ñ—Å–ª—è, 0 —è–∫—â–æ —Å–ª–æ–≤–∞ –æ–¥–Ω–∞–∫–æ–≤—ñ —ñ -1 —è–∫—â–æ —Å–ª–æ–≤–æ –≤ —Å–ª–æ–≤–Ω–∏–∫—É —Å—Ç–æ—ó—Ç—å –ø–µ—Ä–µ–¥
// –í –Ω–∞—à–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ –∑–≤–µ—Ä—Ö—É word1 —Å—Ç–æ—ó—Ç—å –ø–µ—Ä–µ–¥ word2, –±–æ –º–∏ –æ—Ç—Ä–∏–º–∞–ª—å -1 –≤ –∫–æ–Ω—Å–æ–ª—å

// '0123 '.repeat(4), '0123 0123 0123 0123'
// '0123 '.padStart(18, '**** '), '**** **** **** 0123'
// '0123 '.padEnd(19, ' ****'), '0123 **** **** ****'

const x4 = 12345;

console.log(x4);

console.log(
  x4.toString(),
  '' + x4,
  `${x4}`,
  String(x4),
);

//.trimLeft(), .trimRight(), –æ–±—Ä—ñ–∑–∞—î –ø—Ä–æ–±—ñ–ª–∏ –ø–æ –∫—Ä–∞—è–º

//.toUpperCase() and .toLowerCase() 

//.replace('a', '_') –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª –∞, replaceAll('a', '_') –≤—Å—ñ —Å–∏–º–≤–æ–ª–∏ –∞
// –í–∞–∂–ª–∏–≤–æ –ø–∞–º'—è—Ç–∞—Ç–∏, —â–æ –∂–æ–¥–Ω—ñ –º–µ—Ç–æ–¥–∏ –Ω–µ –∑–º—ñ–Ω—é—é—Ç—å —Ä—è–¥–æ–∫, –∞ –≤—Å—ñ –º–µ—Ç–æ–¥–∏ —Å—Ç–≤–æ—Ä—é—é—Ç—å –Ω–æ–≤–∏–π —Ä—è–¥–æ–∫

const text = 'Mate academy';
const part = 'mAte';

console.log(
  text.toLowerCase().includes(part.toLowerCase())
);
// –†–µ–≥—ñ—Å—Ç–µ—Ä –º–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è

// –©–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –¥–µ —Å–∞–º–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞—à–∞ —á–∞—Å—Ç–∫–∞, –º–æ–∂–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏(—Ç–µ–∂ –∑–∞–ª–µ–∂–Ω–∞ –≤—ñ–¥ —Ä–µ–≥—ñ—Å—Ç—Ä—É)
// –ú–∏ —à—É–∫–∞—î–º–æ –ø–æ—á–∞—Ç–æ–∫ –≤—Å—å–æ–≥–æ —Ä—è–¥–∫–∞, —Ç–æ–±—Ç–æ —á–∞—Å—Ç–∫–∞ '–∞—Å' –Ω–µ –ø—ñ–¥—ñ–π–¥–µ

console.log(
  text.startsWith('a')
);

// –Ø–∫—â–æ —è —Ö–æ—á—É –∑–Ω–∞–π—Ç–∏ —á–∏–º –∑–∞–≤–µ—Ä—à—É—î—Ç—å—Å—è –º—ñ–π —Ä—è–¥–æ–∫
console.log(
  text.endsWith('emy')
);

// –Ü—Å–Ω—É—î –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ—à—É–∫—É —Ç–æ—á–Ω–æ–≥–æ —Å–ø—ñ–≤–ø–∞–¥—ñ–Ω–Ω
// –í —Ü—å–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ –º–∏ —à—É–∫–∞—î–º–æ —ñ–Ω–¥–µ–∫—Å '–∞' –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ –¥—Ä—É–≥–æ–≥–æ —ñ–Ω–¥–µ–∫—Å–∞—è
 console.log(
  text.indexOf('a', 2)
 );

// –Ü—Å–Ω—É—î –º–µ—Ç–æ–¥ —è–∫–∏–π –¥–æ–∑–≤–æ–ª—è—î —à—É–∫–∞—Ç–∏ –∑ –∫—ñ–Ω—Ü—è
// –¢–µ–∂ –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Ä–µ–≥—ñ—Å—Ç—Ä—É

console.log(
  text.lastIndexOf('ac')
);

// –ú–µ—Ç–æ–¥ .slice –ø—Ä–∞—Ü—é—î –∑ –≤—ñ–¥'—î–º–Ω–∏–º–∏ —ñ–Ω–¥–µ–∫—Å–∞–º–∏, –≤ –Ω–∞—à–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ –º–∏ –æ—Ç—Ä–∏–º—É—î–º–æ
// —Ç–µ–∫—Å—Ç –≤—ñ–¥ –¥—Ä—É–≥–æ–≥–æ —ñ–Ω–¥–µ–∫—Å–∞ –¥–æ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ (–º—ñ–Ω—É—Å –¥–≤–∞)

console.log (
  text.slice(2, -2)
);

//parseInt() - —Ü–µ —Ñ—É–Ω–∫—Ü—ñ—è –≤ JavaScript, —è–∫–∞ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä—è–¥–∫–∞ —É —Ü—ñ–ª–µ —á–∏—Å–ª–æ. –í–æ–Ω–∞ –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∏: —Ä—è–¥–æ–∫, —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏, —ñ, –Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ, –æ—Å–Ω–æ–≤—É —Å–∏—Å—Ç–µ–º–∏ —á–∏—Å–ª–µ–Ω–Ω—è (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –≤–≤–∞–∂–∞—î—Ç—å—Å—è –¥–µ—Å—è—Ç–∫–æ–≤–∞ —Å–∏—Å—Ç–µ–º–∞).
//parseFloat() - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä—è–¥–∫–∞ —É —á–∏—Å–ª–æ –∑ –ø–ª–∞–≤–∞—é—á–æ—é –∫–æ–º–æ—é.

//Extended Extra
function getArrayProduct(numbersr) {
  let totalProduct = 1;

  // debugger;

  for (const n of numbersr) {
    totalProduct *= n; 
  }

  const result = [];

  for (const n of numbersr) {
    result.push(totalProduct / n); 
  }

  return result;
}

console.log(getArrayProduct([5, 3, 7, 4, 5, 6]));

'use strict';

function sume(a, ...args) { //–ø–µ—Ä—à—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –ø—ñ–¥—É—Ç—å –≤ –∑–º—ñ–Ω–Ω—É –∞, –æ—Å—Ç–∞–ª—å–Ω—ñ –≤ ...args
  console.log(args.length);
}

sume(1, 2)
sume(1, 2, 3, 4)
sume(undefined);

// –ó–∞–∑–≤–∏—á–∞–π –æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ –∞–±–æ –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Å—Ç–∞–≤–ª—è—Ç—å –≤ –∫—ñ–Ω—Ü—ñ
// –©–æ–± –ø–µ—Ä–µ–¥–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–Ω–∞—á–µ–Ω–Ω—è (sum(1, 2, 3, 4)) –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ä–µ—Å—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä ...
// –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –ø–µ—Ä–µ–¥–∞–Ω—ñ –ø—ñ—Å–ª—è –¥—Ä—É–≥–æ–≥–æ –±—É–¥—É—Ç—å –∑–±–µ—Ä—ñ–≥–∞—Ç–∏—Å—è –≤ –º–∞—Å–∏–≤—ñ
// —Ç–∞–∫–æ–∂ –º–∏ –º–æ–∂–µ–º–æ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –≤—Å—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –¥–æ –æ–¥–Ω–æ–≥–æ –º–∞—Å–∏–≤—É
// undefined —Ç–µ–∂ –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è 

'use strict';

console.log(
  sum0(1, 2),
  sum0(1, 2, 3, 4),
  sum0(),
  );

  function sum0(a = 0, b = 0, ...args) {
    console.log(args);

    return a + b;
  } // —Ü—è —Ñ—É–Ω–∫—Ü—ñ—è –∑–º–æ–∂–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ —è–∫—â–æ —ó—ó –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –≤–∏—â–µ –∫–æ–¥—É

  let operation = function(a = 0, b = 0, ...args) {
    console.log(args);

    return a + b;
  };
   // —Ü—ñ –∂ —Ñ—É–Ω–∫—Ü—ñ—ó –±—É–¥—É—Ç—å –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –Ω—ñ–∂—á–µ –ø–æ –∫–æ–¥—É(–ø—ñ—Å–ª—è –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è)   
  let operation2 = (a = 0, b = 0, ...args) => {
    console.log(args);

    return a + b;
  };
   // —Ü—ñ –∂ —Ñ—É–Ω–∫—Ü—ñ—ó –±—É–¥—É—Ç—å –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –Ω—ñ–∂—á–µ –ø–æ –∫–æ–¥—É(–ø—ñ—Å–ª—è –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è)                
  let operation3 = (a = 0, b = 0, ...args) => a + b;
  let operation4 = a => a + 10;
   // —Ü—ñ –∂ —Ñ—É–Ω–∫—Ü—ñ—ó –±—É–¥—É—Ç—å –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –Ω—ñ–∂—á–µ –ø–æ –∫–æ–¥—É(–ø—ñ—Å–ª—è –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è)  
  console.log(
    operation(1, 2),
    operation2(1, 2),
    operation3(1, 2),
    operation4(1, 2),
  );

// 'use strict'

// function getName(count) {
//   switch(count) {
//   case 1:
//     return 'One';

//   case 2: 
//     return 'Two';

//   case 3:
//     return 'Three';
//   }
// }

// –Ø–∫—â–æ –≤ –Ω–∞—Å –Ω–µ–º–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤–∏ –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫ —ñ –º–∏ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∫—Ä–∞—â–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ switch case
// –¶–µ —Å–ø—Ä–æ—â—É—î –∫–æ–¥

// function getName(count) {
//   switch(true) {
//     case count < 2:
//       return 'One';

//     case count <= 4:
//       return 'A few';

//     default:
//       return 'Many';
//   }
// }

// –Ø–∫—â–æ —É–º–æ–≤–∏ –Ω–µ –ø–µ—Ä–µ–±—ñ—Ä –∑–Ω–∞—á–µ–Ω—å, —Ç–æ –∫—Ä–∞—â–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ if else

'use strict';

const value5 = 10;

//–ó–Ω–∞—á–µ–Ω–Ω—è, —è–∫—ñ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—Ç—å—Å—è –Ω–∞ false: false, '', 0, NaN, 0n, null, undefined
//–ó–Ω–∞—á–µ–Ω–Ω—è, —è–∫—ñ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—Ç—å—Å—è –Ω–∞ treu(–≤—Å—ñ –æ—Å—Ç–∞–ª—å–Ω—ñ, —â–æ –Ω–µ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—é—Ç—å—Å—è –Ω–∞ false): [], () => {}, {}
//Boolean() –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞ –±—É–ª–µ–≤ —Ç–∏–ø, –∞–±–æ !!value

if(value5) {
  console.log(
    Boolean(value5), !!value5,
    String(value5), `${value5}`, '' + value5, //–í —Å–µ—Ä–µ–¥–∏–Ω—ñ —ñ–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü—ñ—ó `` –∑–Ω–∞—á–µ–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –Ω–∞ —Ä—è–¥–æ–∫
    Number(value5), value5 - 0, +value5 // –í –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ—è—Ö –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–∞ —á–∏—Å–ª–æ 
  );
}

'use strict';

const value6 = '2';

console.log(
  value6 > 18,
  value6 > '18' // –Ø–∫—â–æ –º–∏ –ø–æ—Ä—ñ–≤–Ω—é—î–º–æ –¥–≤–∞ —Ä—è–¥–∫–∏, —Ç–æ –≤–æ–Ω–∏ –ø–æ—Ä—ñ–≤–Ω—é—Ç—å—Å—è –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ, –æ—Å–∫—ñ–ª—å–∫–∏ –ø–µ—Ä—à–∏–π '2' —Å–∏–º–≤–æ–ª –º–∞—î –±—ñ–ª—å—à–∏–π –∫–æ–¥ –Ω—ñ '18'
);
// –Ø–∫—â–æ –≤ –Ω–∞—Å –¥–≤–∞ —Ä—è–¥–∫–∏, —Ç–æ –º–∏ –ø–æ—Ä—ñ–≤–Ω—é—î–º–æ —ó—Ö –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ, –≤ —ñ–Ω—à–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö –º–∏ –ø—Ä–∏–≤–æ–¥–∏–º–æ –¥–æ —á–∏—Å–µ–ª

console.log(
  NaN === NaN, // NaN —Ü–µ —î–¥–∏–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ js, —è–∫–µ –Ω–µ –¥–æ—Ä—ñ–≤–Ω—é—î —Å–æ–±—ñ
  isNaN(NaN),
  Object.is(NaN, NaN) // –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–Ω—è —Ä—ñ–≤–Ω—ñ –º—ñ–∂ —Å–æ–±–æ—é, –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –∑–Ω–∞—á–µ–Ω–Ω—è–º NaN. –í —ñ–Ω—à–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ === —Å—Ç—Ä–æ–≥–µ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è 
)

function getGuestsCount(guestsInput) {
  const guestsNumber = parseInt(guestsInput);

  return isNaN(guestsNumber)
    ? 'not a number'
    : guestsNumber;
}
// –£ —Ü—å–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ –º–∏ –≤ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –ø–µ—Ä–µ–¥–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –º–µ—Ç–æ–¥—É
// parseInt, —è–∫—â–æ –ø–µ—Ä—à–µ –µ–ª–µ–º–µ–Ω—Ç –∑ –∑–Ω–∞—á–µ–Ω–Ω—è guestInput –±—É–¥–µ —Ä—è–¥–∫–æ–º parseInt
// –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç—å –π–æ–≥–æ —É NaN, —è–∫—â–æ —Ü–∏—Ñ—Ä–æ—é, —Ç–æ –º–∏ –∑–±–µ—Ä–µ–∂–µ–º–æ —Ü—ñ–ª–µ –ø–µ—Ä—à–µ —á–∏—Å–ª–æ
// –∞ –ø–æ—Ç—ñ–º –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é isNaN –º–∏ –∑–∞–¥–∞—î–º–æ —É–º–æ–≤—É, —è–∫—â–æ —Ü–µ–π –≤–∏—Ä–∞–∑ true(—Ç–æ–±—Ç–æ —á–∏—Å–ª–æ NaN)
// –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ä—è–¥–æ–∫ not a number, –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É

// isNaN('Hello'); // –ø–æ–≤–µ—Ä–Ω–µ true, –æ—Å–∫—ñ–ª—å–∫–∏ 'Hello' –Ω–µ –º–æ–∂–Ω–∞ –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ –≤ —á–∏—Å–ª–æ
// isNaN(42); //  false, –æ—Å–∫—ñ–ª—å–∫–∏ 42 - —Ü–µ —á–∏—Å–ª–æ–ø–æ–≤–µ—Ä–Ω–µ



// –æ–ø–µ—Ä–∞—Ç–æ—Ä or || –ø–æ–≤–µ—Ä—Ç–∞—î –ø–µ—Ä—à–µ –Ω–µ –ø–æ—Ä–æ–∂–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è
// –æ–ø–µ—Ä–∞—Ç–æ—Ä and && –ø–æ–≤–µ—Ä—Ç–∞—î –ø–µ—Ä—à–µ –ø–æ—Ä–æ–∂–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è
// –≤ —Ü–∏—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä—ñ–≤ —Ä—ñ–∑–Ω–∏–π –ø—Ä—ñ–æ—Ä—ñ—Ç–µ—Ç, –æ–ø–µ—Ä–∞—Ç–æ—Ä and && –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø–µ—Ä—à–∏–º

console.log(
  0 || null || 12 || false,

  0 || (null && 12) || false, 
  0 || (null) || false, // –í —Ü—å–æ–º—É –≤–∏–ø–∞–¥–∫—É –ø–æ–≤–µ—Ä–Ω–µ—Ç—å—Å—è –æ—Å—Ç–∞–Ω–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è (false)
); // —Ç–æ–º—É, —â–æ —Å–µ—Ä–µ–¥ –Ω–∏—Ö –Ω–µ–º–∞—î –∂–æ–¥–Ω–æ–≥–æ –Ω–µ –ø–æ—Ä–æ–∂–Ω—å–æ–≥–æ

const nameme = '' || 'No name';
//–Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–µ–¥–µ —â–æ—Å—å, —Ç–æ –º–∏ —Ü–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î–º–æ, —è–∫—â–æ –Ω—ñ —Ç–æ–¥—ñ –≤–∏–≤–µ–¥–µ—Ç—å 'No name'


function canTheyBook(adultsCount = 0, childrenCount = 0) {
  // debugger;

  const hasSpace = adultsCount + childrenCount <= 8;
  const oneAdult = adultsCount > 0;
  const childPerAdult = childrenCount <= 2 * adultsCount;

  return hasSpace && oneAdult && childPerAdult;
}

console.log(canTheyBook(3, 5));

// function joinWords(words, glue) {
//   return words.join(glue);
// }


`use strict`;

const firstName11 = 'Misha';
const lastName11 = 'Zolotukhin';
const age11 = '25';

const firstName22 = 'Oleg';
const lastName22 = 'Hodunko';
const age22 = '55';

printInfo(firstName11, lastName11, age11);
printInfo(firstName22, lastName22, age22);

function printInfo(firstName, lastName, age) {
  console.log(`User ${firstName} ${lastName} ${age}`);
}

const user1 = {
  firstName: 'Misha',
  lastName: 'Zolotukhin',
  age: 39,
};

const user2 = {
  firstName: 'Oleg',
  lastName: 'Zaraz',
  age: 55,
};

printUserInfo(user1);
printUserInfo(user2);

function printUserInfo(user) {
  console.log(`User ${user.firstName} ${user.lastName} is ${user.age}`);
}

'use strict';

const age3 = 39;

const user3 = {
  'first $$&name': 'Misha',
  'lastName': 'Hrynko',
  fullName: 'Mish Hrynko',
  age: age3,
  age,
};

console.log(
  user3.fullName,
  user3.lastName,
  user3['first $$&name'] // –≤ —Å–µ—Ä–µ–¥–∏–Ω—ñ –∫–≤–∞–¥—Ä–∞—Ç–Ω–∏—Ö –¥—É–∂–æ–∫ –º–æ–∂–Ω–∞ —Ä–æ–±–∏—Ç–∏ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è(–∫–æ–Ω–∫–∞—Ç–∏–Ω–∞—Ü—ñ—é)
  // use3['first' + ' $$&name'], —è–∫—â–æ –º–∏ –≤–∏–±–µ—Ä–µ–º–æ –Ω–µ —ñ—Å–Ω—É—é—á–∏–π –∫–ª—é—á, —Ç–æ –æ—Ç—Ä–∏–º–∞—é –∑–Ω–∞—á–µ–Ω–Ω—è undefined
);

user3.age = 40;
user3['age'] = 41;

delete user3.age; 
delete user3['age']; // –≤–∏–¥–∞–ª–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ

console.log(user3);


'use strict';

const user5 = {
  firstName: 'Demian',
  age: 39,
  isMarried: false,
};

const key = 'isMarried';

// if (user5.firstName) {
//   console.log('Property exists');
// }

// if (user5[key] !== undefined) { // —è–∫—â–æ –∫–ª—é—á –≤ –∑–º—ñ–Ω–Ω—ñ–π, —Ç–æ–¥—ñ –∑–º—ñ–Ω–Ω—É(–≤ –∫–æ—Ç—Ä—ñ–π –∫–ª—é—á) –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω–∏—Ö –¥—É–∂–∫–∞—Ö
//   console.log('Property exists'); // –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å false —É –æ–±'—î–∫—Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î undefined, –¥–ª—è —Ü—å–æ–≥–æ –º–∏ —Ä–æ–±–∏–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É
// }

// if ('age' in user5) {
//   console.log('Property exists');
// }

if (Object.hasOwn(user5, key)) {
  console.log('Property exists');
}

//–Ω—É–ª—å–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ (true/false) –ø—ñ–¥—ñ–π–¥–µ –≤ –±—ñ–ª—å—à–æ—Å—Ç—ñ –≤–∏–ø–∞–¥–∫—ñ–≤, –∞–ª–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ä—ñ—î–Ω—Ç—É–≤–∞—Ç–∏—Å—è –≤ –æ—Å—Ç–∞–ª—å–Ω–∏—Ö
//–ø–µ—Ä—à–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ if (–º–∞—î —Å–ª–∞–±–∫–µ –º—ñ—Å—Ü–µ undefined)
//–¥—Ä—É–≥–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ if in (–º–∞—î —Å–ª–∞–±–∫–µ –º—ñ—Å—Ü–µ –∑ —É–Ω–∞—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è–º)
//—Ç—Ä—î—Ç—è Object.hasOwn() –ø–æ–∫—Ä–∏–≤–∞—î –≤—Å—ñ –∫–µ–π—Å–∏

'use strict'

const user6 = {
  firstName: 'Misha',
  age: [39, 3, 4],
  isMarried: true,
  2: 'qwe',
  0: 12, // —Ü—ñ–ª—ñ —á–∏—Å–ª–∞ –∑'—è–≤–ª—è—Ç—å—Å—è —Å–ø–æ—á–∞—Ç–∫—É –æ–±'—î–∫—Ç—É. –¢–∞–∫–æ–∂ –≤–æ–Ω–∏ –±—É–¥—É—Ç—å –≤–ø–æ—Ä—è–¥–∫–æ–≤—É–≤–∞—Ç–∏—Å—è –∑–≥—ñ–¥–Ω–æ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—é
};

user6.x = 10; // –Ω–æ–≤–∞ —Ö –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å –∑'—è–≤–∏—Ç—å—Å—è –≤ –∫—ñ–Ω—Ü—ñ

for (const key in user6) {
  console.log(key, user6[key]); //[] –¥—É–∂–∫–∏, —Ç–æ–º—É —â–æ –∑–Ω–∞—á–µ–Ω–Ω—è key –≤ –æ–±'—î–∫—Ç—ñ –Ω–µ–º–∞—î
} // –©–æ–± –ø–µ—Ä–µ–±—Ä–∞—Ç–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –æ–±'—î–∫—Ç–∞, –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ user6[key(–∑–º—ñ–Ω–Ω–∞, —è–∫—É –æ—Ç—Ä–∏–º–∞–≤ –≤ —Ü–∏–∫–ª—ñ)]


console.log(Object.keys(user6)) // –≤ —Ü—å–æ–º—É –≤–∏–ø–∞–¥–∫—É —è –æ—Ç—Ä–∏–º–∞—é –º–∞—Å–∏–≤ –∑ —É—Å—ñ–º–∞ –∫–ª—é—á–∞–º–∏

for (const key of Object.keys(user6)) {
  console.log(key);
}

// –Ø–∫—â–æ –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω—ñ –æ–¥—Ä–∞–∑—É —Ç—ñ–ª—å–∫–∏ –∑–Ω–∞—á–µ–Ω–Ω—è, –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –º–µ—Ç–æ–¥ Object.values()
// Object.values() —Å—Ç–≤–æ—Ä—é—î –º–∞—Å–∏–≤ –∑ —É—Å—ñ–º–∞ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏
for (const value of Object.values(user6)) {
  console.log(value);
}

// –Ø–∫—â–æ –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥—ñ—Å—Ç–∞—Ç–∏ —ñ –∫–ª—é—á—ñ —ñ –∑–Ω–∞—á–µ–Ω–Ω—è —ñ—Å–Ω—É—î –º–µ—Ç–æ–¥ Object.entries()
// Object.entries() —Å—Ç–≤–æ—Ä—é—î –º–∞—Å–∏–≤ –∑ –º–∞—Å–∏–≤–∞–º–∏(—è–∫—ñ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è –∑ –¥–≤–æ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤) –∑ –∫–ª—é—á–∞ —ñ –∑–Ω–∞—á–µ–Ω–Ω—è(–∫–æ–∂–µ–Ω –º–∞—Å–∏–≤ –≤ –º–∞—Å–∏–≤—ñ —Ü–µ –∫–ª—é—á —ñ –π–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è)
for (const entry of Object.entries(user6)) {
//   console.log(entry);
  console.log(entry[0], entry[1]); // –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –æ–ø–µ—Ä—É–≤–∞–Ω–Ω—è –∑ –∫–ª—é—á–µ–º —ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º
}

function getTriathlonDistance(distance) {
  if (distance === 0) {
    return 'Starting Line... Good Luck!';
  };

  const swimming = 3.86;
  const bike = 180.25;
  const run = 42.2;

  const totalDistance = swimming + bike + run;

  if (distance >= totalDistance) {
    return 'You\'re done! Stop running!';
  }

  const diff = (totalDistance - distance).toFixed(2);
  const message = `${diff} to go!`;

  if (distance < swimming) {
    return { swim: message };
  }

  if (distance < swimming + bike) {
    return { bike: message };
  }

  return { run: message };
};

console.log(getTriathlonDistance(180));


function countBoxes(boxes) {
  const result = {};

  debugger;

  for (const box of boxes) {
    if (!result[box]) {
      result[box] = 0;
    }

    result[box]++;
  }

  return result;
}

console.log(countBoxes('qrewwerwerqewrqerwetwetwergt'));


function countMatchingSocks(colors) {
  const result = {};
  let countPairs = 0;

  debugger;

  for (const color of colors) {
    if (result[color]) {
      countPairs++;
      result[color] = 0;
    } else {
      result[color] = 1;
    }
  }

  return countPairs;
}

const socks = ['red', 'blue', 'red', 'green', 'blue', 'red', 'blue', 'yellow'];
const pairs = countMatchingSocks(socks);
console.log(pairs); 


const number69 = [2, 4, 6, 3, 9, 5, 3];

function countNextSmaller(numbers69) {
  const result = [];
  debugger;

  for (let i = 0; i < numbers69.length; i++) {
    let smallerCount = 0; // smallerCount –æ–±–Ω—É–ª—è—î—Ç—å—Å—è —Ç—É—Ç –ø–µ—Ä–µ–¥ –∫–æ–∂–Ω–∏–º –ø–æ—á–∞—Ç–∫–æ–º –Ω–æ–≤–æ—ó —ñ—Ç–µ—Ä–∞—Ü—ñ—ó

    for (let j = i + 1; j < numbers69.length; j++) {
      if (numbers69[i] > numbers69[j]) {
        smallerCount++;
      }
    }

    result.push(smallerCount);
  }

  return result;
}

console.log(countNextSmaller(number69));